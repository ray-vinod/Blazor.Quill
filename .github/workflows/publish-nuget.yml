name: Publish NuGet Package

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    steps:
      - name: Validate Tag Format
        run: |
          if [[ ! "${GITHUB_REF}" =~ ^refs/tags/v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            echo "Invalid tag format. Use: v<MAJOR>.<MINOR>.<PATCH> (e.g., v1.0.0)"
            exit 1
          fi

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore Dependencies
        run: dotnet restore

      - name: Run Tests
        run: dotnet test --configuration Release --no-restore

      - name: Build Project
        run: dotnet build --configuration Release --no-restore

      - name: Create NuGet Package
        run: dotnet pack --configuration Release --output ./nupkgs

      - name: Push to NuGet Gallery
        run: |
          set -o pipeFail
          output=$(dotnet nuget push "nupkgs/*.nupkg" \
            --source https://api.nuget.org/v3/index.json \
            --api-key $NUGET_API_KEY \
            --skip-duplicate 2>&1)

          echo "$output"
          exit_code=$?
          exit $exit_code

      - name: Push to GitHub Packages
        run: |
          set -o pipeFail
          output=$(dotnet nuget push "nupkgs/*.nupkg" \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            --api-key ${{ secrets.GITHUB_TOKEN }} \
            --skip-duplicate 2>&1)

          echo "$output"
          exit_code=$?
          exit $exit_code

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1.1.4
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload .nupkg to GitHub Release
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: nupkgs/Blazor.Quill.${{ github.ref_name }}.nupkg
          asset_name: Blazor.Quill.${{ github.ref_name }}.nupkg
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}